/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestioninscription;

import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import sql.*;

/**
 *
 * @author Quentin
 */
public class FenGestRentabilite extends javax.swing.JFrame {
    Connection conn;
    Statement stmt, stmt2, stmt3, stmt4, stmt5;
    
    
    /**
     * Creates new form FenGestRentabilite
     * @param parent
     * @param modal
     */
    public FenGestRentabilite(java.awt.Frame parent, boolean modal) 
    {
      //  super(parent, modal);
        initComponents();
        jPanel1.setVisible(false);
        lblMarge.setText("Aucune session selectionnée.");
        try 
        {
            stmt = GestionBdd.connexionBdd(GestionBdd.TYPE_MYSQL, "formarmor","localhost", "root","");
            String req = "Select * from session_form where close = 1";
            ResultSet rs = GestionBdd.envoiRequeteLMD(stmt, req);
            int i =0;
            double txRemp=1698169861; //Si nous avons ce résultat dans la colonne Taux de remplissage, alors il y a une erreur sur le calcul de txRemp
            
            while(rs.next())
            {
                jTable1.setValueAt(rs.getString("numero"), i, 0);
                jTable1.setValueAt(rs.getString("libelleform"), i, 1);
                jTable1.setValueAt(rs.getString("niveauform"), i, 2);
                jTable1.setValueAt(rs.getString("datedebut"), i, 3);
                jTable1.setValueAt(rs.getString("nb_inscrits"), i, 4);
                txRemp = rs.getInt("nb_inscrits") * 100 /rs.getInt("nb_places") ;
                jTable1.setValueAt(txRemp+ " %", i, 5);
                
                i += 1;
                
            }
            rs.close();
            stmt.close();
            
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(FenGestRentabilite.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblGestRenta = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        lblMarge = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1200, 600));

        lblGestRenta.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        lblGestRenta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblGestRenta.setText("GESTION DE LA RENTABILITE");
        lblGestRenta.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jTable1.setModel(new ModeleJTableGestRenta());
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTable1InputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTable3.setModel(new ModeleJTableParticipant());
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 192, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(13, 13, 13)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(14, Short.MAX_VALUE)))
        );

        lblMarge.setText("Marge de la session selectionnée : ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(lblGestRenta, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblMarge)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lblGestRenta, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(lblMarge)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
       jPanel1.setVisible(true);
       int numero = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(),0).toString());
        try
        {
            //On vide la JTable
            int j, k;
            for(int i=0;i<jTable3.getRowCount();i++)
            {
                for (j=0;j<jTable3.getColumnCount();j++)
		{
                    jTable3.setValueAt(null,i,j);
		}
            }
            stmt = GestionBdd.connexionBdd(GestionBdd.TYPE_MYSQL, "formarmor","localhost", "root","");
            stmt2 = GestionBdd.connexionBdd(GestionBdd.TYPE_MYSQL, "formarmor","localhost", "root","");
            stmt3 = GestionBdd.connexionBdd(GestionBdd.TYPE_MYSQL, "formarmor","localhost", "root","");
            stmt4 = GestionBdd.connexionBdd(GestionBdd.TYPE_MYSQL, "formarmor","localhost", "root","");
            stmt5 = GestionBdd.connexionBdd(GestionBdd.TYPE_MYSQL, "formarmor","localhost", "root","");
            String req = "Select * from inscription where num_session ='"+numero+"'";
            ResultSet rs = GestionBdd.envoiRequeteLMD(stmt, req);
            
            //On affiche la marge de base au cas où il n'y ait pas d'inscrits
            req="select coutrevient from formation f, session_form s where f.libelle = s.libelleform and f.niveau = s.niveauform and s.numero ="+numero;
            ResultSet rs4 = GestionBdd.envoiRequeteLMD(stmt5, req);
            rs4.next();
            lblMarge.setText("Marge de la session sélectionnée : -"+rs4.getFloat(1));
            int i = 0;
            while(rs.next())
            {
                //On récupère le client concerné
                req = "select * from client where matricule ='"+rs.getString("matricule")+"'";
                ResultSet rs1 = GestionBdd.envoiRequeteLMD(stmt2, req);
                rs1.next();
                jTable3.setValueAt(rs1.getString("matricule"), i, 0);
                jTable3.setValueAt(rs1.getString("nom"), i, 1);
                //On recupère le taux horaire du client concerné
                req = "select taux_horaire from statut s, client c where s.type = c.typestatut and c.matricule ='"+rs.getString("matricule")+"'";
                ResultSet rs2 = GestionBdd.envoiRequeteLMD(stmt3, req);
                rs2.next();
                jTable3.setValueAt(rs2.getFloat("taux_horaire"), i, 2);
                i += 1;
                
                //Cacul de la marge
                req = "Select sum(taux_horaire) as revenu_session ";
                req += "from statut st, session_form s, client c, inscription i ";
                req += "where s.numero = i.num_session and c.matricule = i.matricule ";
                req += "and c.typestatut = st.type and s.numero = " + numero;
                ResultSet rs3 = GestionBdd.envoiRequeteLMD(stmt3, req);
                rs3.next();
                
                
                //On change la valeur de lblMarge
                lblMarge.setText("Marge de la session sélectionnée : " +(rs3.getFloat(1)- rs4.getFloat(1)));
                
                rs3.close();
                rs2.close();
                rs1.close();
            }
            rs4.close();
            stmt5.close();
            stmt3.close();
            stmt2.close();
            rs.close();
            stmt.close();
            
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(FenGestRentabilite.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        
    }//GEN-LAST:event_jTable3MouseClicked

    private void jTable1InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTable1InputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1InputMethodTextChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
      
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    private javax.swing.JLabel lblGestRenta;
    private javax.swing.JLabel lblMarge;
    // End of variables declaration//GEN-END:variables
}
